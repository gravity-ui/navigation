{"version":3,"file":"index.es22.js","sources":["../src/components/CompositeBar/Item/Item.tsx"],"sourcesContent":["import React from 'react';\n\nimport {ActionTooltip, Icon, List, Popup, PopupPlacement, PopupProps} from '@gravity-ui/uikit';\n\nimport {useAsideHeaderContext} from '../../AsideHeader/AsideHeaderContext';\nimport {ASIDE_HEADER_ICON_SIZE} from '../../constants';\nimport {MakeItemParams, MenuItem} from '../../types';\nimport {block} from '../../utils/cn';\nimport {HighlightedItem} from '../HighlightedItem/HighlightedItem';\nimport {\n    COLLAPSE_ITEM_ID,\n    ITEM_TYPE_REGULAR,\n    POPUP_ITEM_HEIGHT,\n    POPUP_PLACEMENT,\n} from '../constants';\nimport {getSelectedItemIndex} from '../utils';\n\nimport './Item.scss';\n\nconst b = block('composite-bar-item');\n\ninterface ItemPopup {\n    popupVisible?: PopupProps['open'];\n    popupAnchor?: PopupProps['anchorRef'];\n    popupPlacement?: PopupProps['placement'];\n    popupOffset?: PopupProps['offset'];\n    popupKeepMounted?: PopupProps['keepMounted'];\n    popupContentClassName?: PopupProps['contentClassName'];\n    renderPopupContent?: () => React.ReactNode;\n    onClosePopup?: () => void;\n}\n\nexport interface ItemProps extends ItemPopup {\n    item: MenuItem;\n    enableTooltip?: boolean;\n    onItemClick?: (\n        item: MenuItem,\n        collapsed: boolean,\n        event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    ) => void;\n    onItemClickCapture?: (event: React.SyntheticEvent) => void;\n    bringForward?: boolean;\n}\n\ninterface ItemInnerProps extends ItemProps {\n    className?: string;\n    collapseItems?: MenuItem[];\n    onMouseEnter?: () => void;\n    onMouseLeave?: () => void;\n}\n\nfunction renderItemTitle(item: MenuItem) {\n    let titleNode = <div className={b('title-text')}>{item.title}</div>;\n\n    if (item.rightAdornment) {\n        titleNode = (\n            <React.Fragment>\n                {titleNode}\n                <div className={b('title-adornment')}>{item.rightAdornment}</div>\n            </React.Fragment>\n        );\n    }\n\n    return titleNode;\n}\n\nexport const defaultPopupPlacement: PopupPlacement = ['right-end'];\nexport const defaultPopupOffset: NonNullable<PopupProps['offset']> = [-20, 8];\n\nexport const Item: React.FC<ItemInnerProps> = (props) => {\n    const {\n        item,\n        className,\n        collapseItems,\n        onMouseLeave,\n        onMouseEnter,\n        enableTooltip = true,\n        popupVisible = false,\n        popupAnchor,\n        popupPlacement = defaultPopupPlacement,\n        popupOffset = defaultPopupOffset,\n        popupKeepMounted,\n        popupContentClassName,\n        renderPopupContent,\n        onClosePopup,\n        onItemClick,\n        onItemClickCapture,\n        bringForward,\n    } = props;\n\n    const {compact} = useAsideHeaderContext();\n\n    const [open, toggleOpen] = React.useState<boolean>(false);\n\n    const ref = React.useRef<HTMLDivElement>(null);\n    const anchorRef = popupAnchor || ref;\n    const highlightedRef = React.useRef<HTMLDivElement>(null);\n\n    const type = item.type || ITEM_TYPE_REGULAR;\n    const current = item.current || false;\n    const tooltipText = item.tooltipText || item.title;\n    const icon = item.icon;\n    const iconSize = item.iconSize || ASIDE_HEADER_ICON_SIZE;\n    const iconQa = item.iconQa;\n    const collapsedItem = item.id === COLLAPSE_ITEM_ID;\n\n    const modifiers: Required<PopupProps>['modifiers'] = React.useMemo(\n        () => [\n            {\n                name: 'compact',\n                enabled: true,\n                options: {compact},\n                phase: 'main',\n                fn() {},\n            },\n        ],\n        [compact],\n    );\n\n    const onClose = React.useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            if (\n                event instanceof MouseEvent &&\n                event.target &&\n                ref.current?.contains(event.target as Node)\n            ) {\n                return;\n            }\n            onClosePopup?.();\n        },\n        [onClosePopup],\n    );\n\n    if (item.type === 'divider') {\n        return <div className={b('menu-divider')} />;\n    }\n\n    const makeIconNode = (iconEl: React.ReactNode): React.ReactNode => {\n        return compact ? (\n            <ActionTooltip\n                title=\"\"\n                description={tooltipText}\n                disabled={!enableTooltip || (collapsedItem && open) || popupVisible}\n                placement=\"right\"\n                className={b('icon-tooltip', {'item-type': type})}\n            >\n                <div\n                    onMouseEnter={() => onMouseEnter?.()}\n                    onMouseLeave={() => onMouseLeave?.()}\n                    className={b('btn-icon')}\n                >\n                    {iconEl}\n                </div>\n            </ActionTooltip>\n        ) : (\n            iconEl\n        );\n    };\n\n    const makeNode = ({icon: iconEl, title: titleEl}: MakeItemParams) => {\n        const createdNode = (\n            <React.Fragment>\n                <div\n                    className={b({type, current, compact}, className)}\n                    ref={ref}\n                    data-qa={item.qa}\n                    onClick={(event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n                        if (collapsedItem) {\n                            /**\n                             * If we call onItemClick for collapsedItem then:\n                             * - User get unexpected item in onItemClick callback\n                             * - onClosePanel calls twice for each popuped item, as result it will prevent opening of panelItems\n                             */\n                            toggleOpen(!open);\n                        } else {\n                            onItemClick?.(item, false, event);\n                        }\n                    }}\n                    onClickCapture={onItemClickCapture}\n                    onMouseEnter={() => {\n                        if (!compact) {\n                            onMouseEnter?.();\n                        }\n                    }}\n                    onMouseLeave={() => {\n                        if (!compact) {\n                            onMouseLeave?.();\n                        }\n                    }}\n                >\n                    <div className={b('icon-place')} ref={highlightedRef}>\n                        {makeIconNode(iconEl)}\n                    </div>\n\n                    <div\n                        className={b('title')}\n                        title={typeof item.title === 'string' ? item.title : undefined}\n                    >\n                        {titleEl}\n                    </div>\n                </div>\n                {renderPopupContent && Boolean(anchorRef?.current) && (\n                    <Popup\n                        contentClassName={b('popup', popupContentClassName)}\n                        open={popupVisible}\n                        keepMounted={popupKeepMounted}\n                        placement={popupPlacement}\n                        offset={popupOffset}\n                        anchorRef={anchorRef}\n                        onClose={onClose}\n                        modifiers={modifiers}\n                    >\n                        {renderPopupContent()}\n                    </Popup>\n                )}\n            </React.Fragment>\n        );\n\n        return item.link ? (\n            <a href={item.link} className={b('link')}>\n                {createdNode}\n            </a>\n        ) : (\n            createdNode\n        );\n    };\n\n    const iconNode = icon ? (\n        <Icon qa={iconQa} data={icon} size={iconSize} className={b('icon')} />\n    ) : null;\n    const titleNode = renderItemTitle(item);\n    const params = {icon: iconNode, title: titleNode};\n    let highlightedNode = null;\n    let node;\n\n    const opts = {compact: Boolean(compact), collapsed: false, item, ref};\n\n    if (typeof item.itemWrapper === 'function') {\n        node = item.itemWrapper(params, makeNode, opts) as React.ReactElement;\n        highlightedNode =\n            bringForward &&\n            (item.itemWrapper(\n                params,\n                ({icon: iconEl}) => makeIconNode(iconEl),\n                opts,\n            ) as React.ReactElement);\n    } else {\n        node = makeNode(params);\n        highlightedNode = bringForward && makeIconNode(iconNode);\n    }\n\n    return (\n        <React.Fragment>\n            {bringForward && (\n                <HighlightedItem\n                    iconNode={highlightedNode}\n                    iconRef={highlightedRef}\n                    onClick={(event: React.MouseEvent<HTMLDivElement, MouseEvent>) =>\n                        onItemClick?.(item, false, event)\n                    }\n                    onClickCapture={onItemClickCapture}\n                />\n            )}\n            {node}\n            {open && collapsedItem && collapseItems?.length && Boolean(anchorRef?.current) && (\n                <CollapsedPopup {...props} anchorRef={ref} onClose={() => toggleOpen(false)} />\n            )}\n        </React.Fragment>\n    );\n};\n\nItem.displayName = 'Item';\n\ninterface CollapsedPopupProps {\n    anchorRef: React.RefObject<HTMLElement>;\n    onClose: () => void;\n}\n\nfunction CollapsedPopup({\n    onItemClick,\n    collapseItems,\n    anchorRef,\n    onClose,\n}: ItemInnerProps & CollapsedPopupProps) {\n    const {compact} = useAsideHeaderContext();\n    return collapseItems?.length ? (\n        <Popup placement={POPUP_PLACEMENT} open={true} anchorRef={anchorRef} onClose={onClose}>\n            <div className={b('collapse-items-popup-content')}>\n                <List\n                    itemClassName={b('root-collapse-item')}\n                    items={collapseItems}\n                    selectedItemIndex={getSelectedItemIndex(collapseItems)}\n                    itemHeight={POPUP_ITEM_HEIGHT}\n                    itemsHeight={collapseItems.length * POPUP_ITEM_HEIGHT}\n                    virtualized={false}\n                    filterable={false}\n                    sortable={false}\n                    onItemClick={onClose}\n                    renderItem={(collapseItem) => {\n                        const makeCollapseNode = ({\n                            title: titleEl,\n                            icon: iconEl,\n                        }: MakeItemParams) => {\n                            const res = (\n                                <div\n                                    className={b('collapse-item')}\n                                    onClick={(\n                                        event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n                                    ) => {\n                                        onItemClick?.(collapseItem, true, event);\n                                    }}\n                                >\n                                    {iconEl}\n                                    {titleEl}\n                                </div>\n                            );\n\n                            return collapseItem.link ? (\n                                <a href={collapseItem.link} className={b('link')}>\n                                    {res}\n                                </a>\n                            ) : (\n                                res\n                            );\n                        };\n\n                        const titleNode = renderItemTitle(collapseItem);\n                        const iconNode = collapseItem.icon && (\n                            <Icon\n                                data={collapseItem.icon}\n                                size={14}\n                                className={b('collapse-item-icon')}\n                            />\n                        );\n\n                        const params = {title: titleNode, icon: iconNode};\n                        const opts = {\n                            compact: Boolean(compact),\n                            collapsed: true,\n                            item: collapseItem,\n                            ref: anchorRef,\n                        };\n                        if (typeof collapseItem.itemWrapper === 'function') {\n                            return collapseItem.itemWrapper(params, makeCollapseNode, opts);\n                        } else {\n                            return makeCollapseNode(params);\n                        }\n                    }}\n                />\n            </div>\n        </Popup>\n    ) : null;\n}\n"],"names":["React"],"mappings":"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"}
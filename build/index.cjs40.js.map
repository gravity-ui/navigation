{"version":3,"file":"index.cjs40.js","sources":["../src/components/CompositeBar/utils.ts"],"sourcesContent":["import {Ellipsis} from '@gravity-ui/icons';\n\nimport {CompositeBarItem} from '../CompositeBar/CompositeBar';\nimport {ITEM_HEIGHT} from '../constants';\n\nimport {MenuItem} from './../types';\nimport {COLLAPSE_ITEM_ID} from './constants';\n\nexport function getItemHeight(item: CompositeBarItem) {\n    if (!isMenuItem(item)) {\n        return ITEM_HEIGHT;\n    }\n\n    switch (item.type) {\n        case 'action':\n            return 50;\n        case 'divider':\n            return 15;\n\n        default:\n            return ITEM_HEIGHT;\n    }\n}\n\nexport function getItemsHeight<T extends CompositeBarItem>(items: T[]) {\n    return items.reduce((sum, item) => sum + getItemHeight(item), 0);\n}\n\nexport function getSelectedItemIndex(items: MenuItem[]) {\n    const index = items.findIndex(({current}) => Boolean(current));\n    return index === -1 ? undefined : index;\n}\n\nexport function getPinnedItems(items: MenuItem[]) {\n    const pinnedItems: MenuItem[] = [];\n    for (const item of items) {\n        if (item.pinned) {\n            pinnedItems.push(item);\n        } else if (item.type === 'divider') {\n            if (pinnedItems.length > 0 && pinnedItems[pinnedItems.length - 1].type !== 'divider') {\n                pinnedItems.push(item);\n            }\n        }\n    }\n    return pinnedItems;\n}\n\nexport function getItemsMinHeight(items: MenuItem[]) {\n    const pinnedItems = getPinnedItems(items);\n    const afterMoreButtonItems = items.filter((item) => item.afterMoreButton);\n\n    return (\n        getItemsHeight(pinnedItems) +\n        getItemsHeight(afterMoreButtonItems) +\n        (pinnedItems.length === items.length ? 0 : ITEM_HEIGHT)\n    );\n}\n\nexport function getMoreButtonItem(menuMoreTitle?: string): MenuItem {\n    return {\n        id: COLLAPSE_ITEM_ID,\n        title: menuMoreTitle,\n        icon: Ellipsis,\n        iconSize: 18,\n    };\n}\n\nexport function getAutosizeListItems(\n    items: MenuItem[],\n    height: number,\n    collapseItem: MenuItem,\n): {\n    listItems: MenuItem[];\n    collapseItems: MenuItem[];\n} {\n    const afterMoreButtonItems = items.filter((item) => item.afterMoreButton);\n    const regularItems = items.filter((item) => !item.afterMoreButton);\n    const listItems = [...regularItems, ...afterMoreButtonItems];\n\n    const allItemsHeight = getItemsHeight(listItems);\n    if (allItemsHeight <= height) {\n        return {listItems, collapseItems: []};\n    }\n\n    const collapseItemHeight = getItemHeight(collapseItem);\n\n    listItems.splice(regularItems.length, 0, collapseItem);\n    const collapseItems: MenuItem[] = [];\n\n    let listHeight = allItemsHeight + collapseItemHeight;\n    let index = listItems.length;\n    while (listHeight > height) {\n        if (index === 0) {\n            break;\n        }\n        index--;\n\n        const item = listItems[index];\n        if (item.pinned || item.id === COLLAPSE_ITEM_ID || item.afterMoreButton) {\n            continue;\n        }\n        if (item.type === 'divider') {\n            if (index + 1 < listItems.length && listItems[index + 1]?.type === 'divider') {\n                listHeight -= getItemHeight(item);\n                listItems.splice(index, 1);\n            }\n            continue;\n        }\n        listHeight -= getItemHeight(item);\n        collapseItems.unshift(...listItems.splice(index, 1));\n    }\n    if (\n        listItems[index]?.type === 'divider' &&\n        (index === 0 || listItems[index - 1]?.type === 'divider')\n    ) {\n        listItems.splice(index, 1);\n    }\n\n    return {listItems, collapseItems};\n}\n\nexport function isMenuItem(item: CompositeBarItem): item is MenuItem {\n    return (item as MenuItem)?.id !== undefined;\n}\n"],"names":["ITEM_HEIGHT","COLLAPSE_ITEM_ID","Ellipsis"],"mappings":"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"}
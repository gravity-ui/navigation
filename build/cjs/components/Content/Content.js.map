{"version":3,"file":"Content.js","sources":["../../../../../src/components/Content/Content.tsx"],"sourcesContent":["/* Used by renderContent AsideHeader prop */\n\nimport React from 'react';\n\nexport type RenderContentType = (data: {size: number}) => React.ReactNode;\n\nexport interface ContentProps {\n    size: number;\n    className?: string;\n    cssSizeVariableName?: string;\n    renderContent?: RenderContentType;\n    children?: React.ReactNode;\n}\n\ninterface RenderContentProps {\n    renderContent: RenderContentType;\n    size: number;\n}\n\nconst RenderContent: React.FC<RenderContentProps> = React.memo(({renderContent, size}) => {\n    return <React.Fragment>{renderContent({size})}</React.Fragment>;\n});\n\nRenderContent.displayName = 'RenderContent';\n\nexport const Content: React.FC<ContentProps> = ({\n    size, // TODO: move to context when MobileHeader will support it\n    className,\n    cssSizeVariableName = '--gn-aside-header-size',\n    renderContent,\n    children,\n}) => {\n    return (\n        <div\n            className={className}\n            style={{...({[cssSizeVariableName]: `${size}px`} as React.CSSProperties)}}\n        >\n            {typeof renderContent === 'function' ? (\n                <RenderContent size={size} renderContent={renderContent} />\n            ) : (\n                children\n            )}\n        </div>\n    );\n};\n"],"names":["React"],"mappings":";;;;;;;;;;AAAA;AAmBA,MAAM,aAAa,GAAiCA,yBAAK,CAAC,IAAI,CAAC,CAAC,EAAC,aAAa,EAAE,IAAI,EAAC,KAAI;AACrF,IAAA,OAAOA,yBAAC,CAAA,aAAA,CAAAA,yBAAK,CAAC,QAAQ,EAAE,IAAA,EAAA,aAAa,CAAC,EAAC,IAAI,EAAC,CAAC,CAAkB,CAAC;AACpE,CAAC,CAAC,CAAC;AAEH,aAAa,CAAC,WAAW,GAAG,eAAe,CAAC;MAE/B,OAAO,GAA2B,CAAC,EAC5C,IAAI;AACJ,SAAS,EACT,mBAAmB,GAAG,wBAAwB,EAC9C,aAAa,EACb,QAAQ,GACX,KAAI;IACD,QACIA,iDACI,SAAS,EAAE,SAAS,EACpB,KAAK,oBAAO,EAAC,CAAC,mBAAmB,GAAG,GAAG,IAAI,CAAA,EAAA,CAAI,EAAyB,CAEvE,EAAA,EAAA,OAAO,aAAa,KAAK,UAAU,IAChCA,wCAAC,aAAa,EAAA,EAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,aAAa,EAAI,CAAA,KAE3D,QAAQ,CACX,CACC,EACR;AACN;;;;"}
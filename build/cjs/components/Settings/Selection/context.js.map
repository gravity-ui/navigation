{"version":3,"file":"context.js","sources":["../../../../../../src/components/Settings/Selection/context.ts"],"sourcesContent":["import React from 'react';\n\nimport {SelectedSettingsPart, SettingsPage, getSelectedSettingsPart} from '../collect-settings';\n\nimport {SettingsSelection} from './types';\n\ninterface ContextValue extends SelectedSettingsPart {\n    selectedRef?: React.RefObject<HTMLDivElement>;\n}\n\nconst defaultValue: ContextValue = {};\n\nconst context = React.createContext(defaultValue);\ncontext.displayName = 'SettingsSelectionContext';\n\nexport function useSettingsSelectionProviderValue(\n    pages: Record<string, SettingsPage>,\n    selection: SettingsSelection | undefined,\n): ContextValue {\n    const selectedRef = React.useRef<HTMLDivElement>(null);\n\n    const contextValue: ContextValue = React.useMemo(() => {\n        if (!selection) return {selectedRef};\n\n        return {selectedRef, ...getSelectedSettingsPart(pages, selection)};\n    }, [pages, selection]);\n\n    return contextValue;\n}\n\nexport const SettingsSelectionContextProvider = context.Provider;\n\nexport function useSettingsSelectionContext(): ContextValue {\n    return React.useContext(context);\n}\n"],"names":["React","getSelectedSettingsPart"],"mappings":";;;;;;;;;;;AAUA,MAAM,YAAY,GAAiB,EAAE,CAAC;AAEtC,MAAM,OAAO,GAAGA,yBAAK,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;AAClD,OAAO,CAAC,WAAW,GAAG,0BAA0B,CAAC;AAEjC,SAAA,iCAAiC,CAC7C,KAAmC,EACnC,SAAwC,EAAA;IAExC,MAAM,WAAW,GAAGA,yBAAK,CAAC,MAAM,CAAiB,IAAI,CAAC,CAAC;AAEvD,IAAA,MAAM,YAAY,GAAiBA,yBAAK,CAAC,OAAO,CAAC,MAAK;AAClD,QAAA,IAAI,CAAC,SAAS;YAAE,OAAO,EAAC,WAAW,EAAC,CAAC;QAErC,OAAQ,MAAA,CAAA,MAAA,CAAA,EAAA,WAAW,IAAKC,uCAAuB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAE,CAAA;AACvE,KAAC,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;AAEvB,IAAA,OAAO,YAAY,CAAC;AACxB,CAAC;AAEY,MAAA,gCAAgC,GAAG,OAAO,CAAC,SAAS;SAEjD,2BAA2B,GAAA;AACvC,IAAA,OAAOD,yBAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACrC;;;;;;"}
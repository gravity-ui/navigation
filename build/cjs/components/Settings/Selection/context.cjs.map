{"version":3,"file":"context.cjs","sources":["../../../../../src/components/Settings/Selection/context.ts"],"sourcesContent":["import React from 'react';\n\nimport {SelectedSettingsPart, SettingsPage, getSelectedSettingsPart} from '../collect-settings';\n\nimport {SettingsSelection} from './types';\n\ninterface ContextValue extends SelectedSettingsPart {\n    selectedRef?: React.RefObject<HTMLDivElement>;\n}\n\nconst defaultValue: ContextValue = {};\n\nconst context = React.createContext(defaultValue);\ncontext.displayName = 'SettingsSelectionContext';\n\nexport function useSettingsSelectionProviderValue(\n    pages: Record<string, SettingsPage>,\n    selection: SettingsSelection | undefined,\n): ContextValue {\n    const selectedRef = React.useRef<HTMLDivElement>(null);\n\n    const contextValue: ContextValue = React.useMemo(() => {\n        if (!selection) return {selectedRef};\n\n        return {selectedRef, ...getSelectedSettingsPart(pages, selection)};\n    }, [pages, selection]);\n\n    return contextValue;\n}\n\nexport const SettingsSelectionContextProvider = context.Provider;\n\nexport function useSettingsSelectionContext(): ContextValue {\n    return React.useContext(context);\n}\n"],"names":["React","getSelectedSettingsPart"],"mappings":";;;;;;;AAUA,MAAM,eAA6B,EAAC,CAAA;AAEpC,MAAM,OAAA,GAAUA,aAAM,CAAA,aAAA,CAAc,YAAY,CAAA,CAAA;AAChD,OAAA,CAAQ,WAAc,GAAA,0BAAA,CAAA;AAEN,SAAA,iCAAA,CACZ,OACA,SACY,EAAA;AACZ,EAAM,MAAA,WAAA,GAAcA,aAAM,CAAA,MAAA,CAAuB,IAAI,CAAA,CAAA;AAErD,EAAM,MAAA,YAAA,GAA6BA,aAAM,CAAA,OAAA,CAAQ,MAAM;AACnD,IAAA,IAAI,CAAC,SAAA,EAAkB,OAAA,EAAC,WAAW,EAAA,CAAA;AAEnC,IAAA,OAAO,EAAC,WAAa,EAAA,GAAGC,uCAAwB,CAAA,KAAA,EAAO,SAAS,CAAC,EAAA,CAAA;AAAA,GAClE,EAAA,CAAC,KAAO,EAAA,SAAS,CAAC,CAAA,CAAA;AAErB,EAAO,OAAA,YAAA,CAAA;AACX,CAAA;AAEO,MAAM,mCAAmC,OAAQ,CAAA,SAAA;AAEjD,SAAS,2BAA4C,GAAA;AACxD,EAAO,OAAAD,aAAA,CAAM,WAAW,OAAO,CAAA,CAAA;AACnC;;;;;;"}
{"version":3,"file":"Drawer.js","sources":["../../../../../src/components/Drawer/Drawer.tsx"],"sourcesContent":["import React from 'react';\n\nimport {Portal, useBodyScrollLock, useForkRef} from '@gravity-ui/uikit';\nimport {CSSTransition, Transition} from 'react-transition-group';\n\nimport {block} from '../utils/cn';\n\nimport {type DrawerDirection, useResizableDrawerItem} from './utils';\n\nimport './Drawer.scss';\n\nconst b = block('drawer');\nconst TIMEOUT = 300;\n\nexport interface DrawerItemProps {\n    /** Unique identifier for the drawer item. */\n    id: string;\n\n    /**\n     * Content to be displayed within the drawer item.\n     * @deprecated Use `children` instead.\n     */\n    content?: React.ReactNode;\n\n    /** Content to be displayed within the drawer item, preferable over the deprecated `content`. */\n    children?: React.ReactNode;\n\n    /** Determines whether the drawer item is visible or hidden. */\n    visible: boolean;\n\n    /** Specifies the direction from which the drawer should slide in, `left` by default.\n     * @default left\n     */\n    direction?: DrawerDirection;\n\n    /** Additional custom class name applied to the drawer item. */\n    className?: string;\n\n    /** Determines whether the drawer item can be resized */\n    resizable?: boolean;\n\n    /**\n     * The width of the resizable drawer item.\n     * If not provided, the width will be stored internally.\n     */\n    width?: number;\n\n    /**\n     * Called at the end of resizing. Can be used to save the new width.\n     * @param width The new width of the drawer item\n     */\n    onResize?: (width: number) => void;\n\n    /** The minimum width of the resizable drawer item */\n    minResizeWidth?: number;\n\n    /** The maximum width of the resizable drawer item */\n    maxResizeWidth?: number;\n}\n\nexport const DrawerItem = React.forwardRef<HTMLDivElement, DrawerItemProps>(\n    function DrawerItem(props, ref) {\n        const {\n            visible,\n            content,\n            children,\n            direction = 'left',\n            className,\n            resizable,\n            width,\n            minResizeWidth,\n            maxResizeWidth,\n            onResize,\n        } = props;\n\n        const itemRef = React.useRef<HTMLDivElement>(null);\n        const handleRef = useForkRef(ref, itemRef);\n        const cssDirection = direction === 'left' ? undefined : direction;\n\n        const {resizedWidth, resizerHandlers} = useResizableDrawerItem({\n            direction,\n            width,\n            minResizeWidth,\n            maxResizeWidth,\n            onResize,\n        });\n\n        const resizerElement = resizable ? (\n            <div className={b('resizer', {direction})} {...resizerHandlers}>\n                <div className={b('resizer-handle')} />\n            </div>\n        ) : null;\n\n        return (\n            <CSSTransition\n                in={visible}\n                timeout={TIMEOUT}\n                unmountOnExit\n                classNames={b('item-transition', {direction: cssDirection})}\n                nodeRef={itemRef}\n            >\n                <div\n                    ref={handleRef}\n                    className={b('item', {direction: cssDirection}, className)}\n                    style={{width: resizable ? `${resizedWidth}px` : undefined}}\n                >\n                    {resizerElement}\n                    {children ?? content}\n                </div>\n            </CSSTransition>\n        );\n    },\n);\n\ntype DrawerChild = React.ReactElement<DrawerItemProps>;\n\nexport interface DrawerProps {\n    /** Child components to be rendered within the drawer. This can be a single child or an array of children. */\n    children: DrawerChild | DrawerChild[];\n\n    /**\n     * Optional flag to prevent the body from scrolling when the drawer is open, `true` by default.\n     * @default true\n     */\n    preventScrollBody?: boolean;\n\n    /** Optional additional class names to style the drawer component. */\n    className?: string;\n\n    /** Optional inline styles to be applied to the drawer component. */\n    style?: React.CSSProperties;\n\n    /** Optional additional class names to style the background veil element. */\n    veilClassName?: string;\n\n    /** Optional callback function that is called when the veil (overlay) is clicked. */\n    onVeilClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n\n    /** Optional callback function that is called when the escape key is pressed, if the drawer is open. */\n    onEscape?: () => void;\n\n    /** Optional flag to hide the background darkening */\n    hideVeil?: boolean;\n\n    /** Optional flag to not use `Portal` for drawer */\n    disablePortal?: boolean;\n}\n\nexport const Drawer: React.FC<DrawerProps> = ({\n    className,\n    veilClassName,\n    children,\n    style,\n    onVeilClick,\n    onEscape,\n    preventScrollBody = true,\n    hideVeil,\n    disablePortal = true,\n}) => {\n    let someItemVisible = false;\n    React.Children.forEach(children, (child) => {\n        if (React.isValidElement<DrawerItemProps>(child) && child.type === DrawerItem) {\n            const childVisible = Boolean(child.props.visible);\n            if (childVisible) {\n                someItemVisible = true;\n            }\n        }\n    });\n\n    React.useEffect(() => {\n        function onKeyDown(event: KeyboardEvent) {\n            if (event.key === 'Escape') {\n                onEscape?.();\n            }\n        }\n        if (someItemVisible) {\n            window.addEventListener('keydown', onKeyDown);\n        }\n        return () => {\n            window.removeEventListener('keydown', onKeyDown);\n        };\n    }, [onEscape, someItemVisible]);\n\n    useBodyScrollLock({enabled: preventScrollBody && someItemVisible});\n\n    const containerRef = React.useRef<HTMLDivElement>(null);\n    const veilRef = React.useRef<HTMLDivElement>(null);\n\n    const drawer = (\n        <Transition\n            in={someItemVisible}\n            timeout={{enter: 0, exit: TIMEOUT}}\n            mountOnEnter\n            unmountOnExit\n            nodeRef={containerRef}\n        >\n            {(state) => {\n                const childrenVisible = someItemVisible && state === 'entered';\n                return (\n                    <div ref={containerRef} className={b({hideVeil}, className)} style={style}>\n                        <CSSTransition\n                            in={childrenVisible}\n                            timeout={TIMEOUT}\n                            unmountOnExit\n                            classNames={b('veil-transition')}\n                            nodeRef={veilRef}\n                        >\n                            <div\n                                ref={veilRef}\n                                className={b('veil', {hidden: hideVeil}, veilClassName)}\n                                onClick={onVeilClick}\n                            />\n                        </CSSTransition>\n                        {React.Children.map(children, (child) => {\n                            if (\n                                React.isValidElement<DrawerItemProps>(child) &&\n                                child.type === DrawerItem\n                            ) {\n                                const childVisible = Boolean(child.props.visible);\n                                return React.cloneElement(child, {\n                                    ...child.props,\n                                    visible: childVisible && childrenVisible,\n                                });\n                            }\n                            return child;\n                        })}\n                    </div>\n                );\n            }}\n        </Transition>\n    );\n\n    if (disablePortal) {\n        return drawer;\n    }\n\n    return <Portal>{drawer}</Portal>;\n};\n"],"names":["block","React","useForkRef","useResizableDrawerItem","CSSTransition","useBodyScrollLock","Transition","Portal"],"mappings":"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"}
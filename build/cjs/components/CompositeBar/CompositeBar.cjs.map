{"version":3,"file":"CompositeBar.cjs","sources":["../../../../src/components/CompositeBar/CompositeBar.tsx"],"sourcesContent":["import React, {FC, ReactNode, useCallback, useContext, useRef} from 'react';\n\nimport {List} from '@gravity-ui/uikit';\nimport AutoSizer, {Size} from 'react-virtualized-auto-sizer';\n\nimport {useAsideHeaderContext} from '../AsideHeader/AsideHeaderContext';\nimport {ASIDE_HEADER_COMPACT_WIDTH} from '../constants';\nimport {MenuItem, SubheaderMenuItem} from '../types';\nimport {block} from '../utils/cn';\n\nimport {Item, ItemProps} from './Item/Item';\nimport {MultipleTooltip, MultipleTooltipContext, MultipleTooltipProvider} from './MultipleTooltip';\nimport {COLLAPSE_ITEM_ID} from './constants';\nimport {\n    getAutosizeListItems,\n    getItemHeight,\n    getItemsHeight,\n    getItemsMinHeight,\n    getMoreButtonItem,\n    getSelectedItemIndex,\n    isMenuItem,\n} from './utils';\n\nimport './CompositeBar.scss';\n\nconst b = block('composite-bar');\n\nexport type CompositeBarItem = MenuItem | SubheaderMenuItem;\n\ntype CompositeBarItems =\n    | {type: 'menu'; items: MenuItem[]}\n    | {type: 'subheader'; items: SubheaderMenuItem[]};\n\nexport type CompositeBarProps = CompositeBarItems & {\n    onItemClick?: (\n        item: MenuItem,\n        collapsed: boolean,\n        event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    ) => void;\n    multipleTooltip?: boolean;\n    menuMoreTitle?: string;\n};\n\ntype CompositeBarViewProps = CompositeBarProps & {\n    collapseItems?: MenuItem[];\n};\n\nconst CompositeBarView: FC<CompositeBarViewProps> = ({\n    type,\n    items,\n    onItemClick,\n    collapseItems,\n    multipleTooltip = false,\n}) => {\n    const ref = useRef<List<CompositeBarItem>>(null);\n    const tooltipRef = useRef<HTMLDivElement>(null);\n\n    const {\n        setValue: setMultipleTooltipContextValue,\n        active: multipleTooltipActive,\n        activeIndex,\n        lastClickedItemIndex,\n    } = useContext(MultipleTooltipContext);\n    const {compact} = useAsideHeaderContext();\n\n    React.useEffect(() => {\n        function handleBlurWindow() {\n            if (multipleTooltip && multipleTooltipActive) {\n                setMultipleTooltipContextValue({active: false});\n            }\n        }\n\n        window.addEventListener('blur', handleBlurWindow);\n\n        return () => {\n            window.removeEventListener('blur', handleBlurWindow);\n        };\n    }, [multipleTooltip, multipleTooltipActive, setMultipleTooltipContextValue]);\n\n    const onTooltipMouseEnter = useCallback(\n        (e: {clientX: number}) => {\n            if (\n                multipleTooltip &&\n                compact &&\n                !multipleTooltipActive &&\n                document.hasFocus() &&\n                activeIndex !== lastClickedItemIndex &&\n                e.clientX <= ASIDE_HEADER_COMPACT_WIDTH\n            ) {\n                setMultipleTooltipContextValue?.({\n                    active: true,\n                });\n            }\n        },\n        [\n            multipleTooltip,\n            compact,\n            multipleTooltipActive,\n            activeIndex,\n            lastClickedItemIndex,\n            setMultipleTooltipContextValue,\n        ],\n    );\n\n    const onTooltipMouseLeave = useCallback(() => {\n        if (multipleTooltip && multipleTooltipActive && document.hasFocus()) {\n            setMultipleTooltipContextValue?.({\n                active: false,\n                lastClickedItemIndex: undefined,\n            });\n        }\n    }, [multipleTooltip, multipleTooltipActive, setMultipleTooltipContextValue]);\n\n    const onMouseEnterByIndex = useCallback(\n        (itemIndex: number) => () => {\n            if (multipleTooltip && document.hasFocus()) {\n                let multipleTooltipActiveValue = multipleTooltipActive;\n                if (!multipleTooltipActive && itemIndex !== lastClickedItemIndex) {\n                    multipleTooltipActiveValue = true;\n                }\n                if (\n                    activeIndex === itemIndex &&\n                    multipleTooltipActive === multipleTooltipActiveValue\n                ) {\n                    return;\n                }\n                setMultipleTooltipContextValue({\n                    activeIndex: itemIndex,\n                    active: multipleTooltipActiveValue,\n                });\n            }\n        },\n        [\n            multipleTooltip,\n            multipleTooltipActive,\n            lastClickedItemIndex,\n            activeIndex,\n            setMultipleTooltipContextValue,\n        ],\n    );\n\n    const onMouseLeave = useCallback(() => {\n        if (compact && document.hasFocus()) {\n            ref.current?.activateItem(undefined as unknown as number);\n            if (\n                multipleTooltip &&\n                (activeIndex !== undefined || lastClickedItemIndex !== undefined)\n            ) {\n                setMultipleTooltipContextValue({\n                    activeIndex: undefined,\n                    lastClickedItemIndex: undefined,\n                });\n            }\n        }\n    }, [\n        activeIndex,\n        compact,\n        lastClickedItemIndex,\n        multipleTooltip,\n        setMultipleTooltipContextValue,\n    ]);\n\n    const onItemClickByIndex = useCallback(\n        (itemIndex: number): ItemProps['onItemClick'] =>\n            (item, collapsed, event) => {\n                if (\n                    compact &&\n                    multipleTooltip &&\n                    itemIndex !== lastClickedItemIndex &&\n                    item.id !== COLLAPSE_ITEM_ID\n                ) {\n                    setMultipleTooltipContextValue({\n                        lastClickedItemIndex: itemIndex,\n                        active: false,\n                    });\n                }\n                onItemClick?.(item, collapsed, event);\n            },\n        [\n            compact,\n            lastClickedItemIndex,\n            multipleTooltip,\n            onItemClick,\n            setMultipleTooltipContextValue,\n        ],\n    );\n\n    return (\n        <React.Fragment>\n            <div\n                ref={tooltipRef}\n                onMouseEnter={onTooltipMouseEnter}\n                onMouseLeave={onTooltipMouseLeave}\n            >\n                <List<CompositeBarItem>\n                    ref={ref}\n                    items={items}\n                    selectedItemIndex={type === 'menu' ? getSelectedItemIndex(items) : undefined}\n                    itemHeight={getItemHeight}\n                    itemsHeight={getItemsHeight}\n                    itemClassName={b('root-menu-item')}\n                    virtualized={false}\n                    filterable={false}\n                    sortable={false}\n                    renderItem={(item, _isItemActive, itemIndex) => {\n                        const itemExtraProps = isMenuItem(item) ? {item} : item;\n                        const enableTooltip = isMenuItem(item)\n                            ? !multipleTooltip\n                            : item.enableTooltip;\n\n                        return (\n                            <Item\n                                {...itemExtraProps}\n                                enableTooltip={enableTooltip}\n                                onMouseEnter={onMouseEnterByIndex(itemIndex)}\n                                onMouseLeave={onMouseLeave}\n                                onItemClick={onItemClickByIndex(itemIndex)}\n                                collapseItems={collapseItems}\n                            />\n                        );\n                    }}\n                />\n            </div>\n            {type === 'menu' && multipleTooltip && (\n                <MultipleTooltip\n                    open={compact && multipleTooltipActive}\n                    anchorRef={tooltipRef}\n                    placement={['right-start']}\n                    items={items}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport const CompositeBar: FC<CompositeBarProps> = ({\n    type,\n    items,\n    menuMoreTitle,\n    onItemClick,\n    multipleTooltip = false,\n}) => {\n    if (items.length === 0) {\n        return null;\n    }\n    let node: ReactNode;\n\n    if (type === 'menu') {\n        const minHeight = getItemsMinHeight(items);\n        const collapseItem = getMoreButtonItem(menuMoreTitle);\n        node = (\n            <div className={b({autosizer: true})} style={{minHeight}}>\n                {items.length !== 0 && (\n                    <AutoSizer>\n                        {(size: Size) => {\n                            const width = Number.isNaN(size.width) ? 0 : size.width;\n                            const height = Number.isNaN(size.height) ? 0 : size.height;\n\n                            const {listItems, collapseItems} = getAutosizeListItems(\n                                items,\n                                height,\n                                collapseItem,\n                            );\n                            return (\n                                <div style={{width, height}}>\n                                    <CompositeBarView\n                                        type=\"menu\"\n                                        items={listItems}\n                                        onItemClick={onItemClick}\n                                        collapseItems={collapseItems}\n                                        multipleTooltip={multipleTooltip}\n                                    />\n                                </div>\n                            );\n                        }}\n                    </AutoSizer>\n                )}\n            </div>\n        );\n    } else {\n        node = (\n            <div className={b({subheader: true})}>\n                <CompositeBarView type=\"subheader\" items={items} onItemClick={onItemClick} />\n            </div>\n        );\n    }\n    return <MultipleTooltipProvider>{node}</MultipleTooltipProvider>;\n};\n"],"names":["block","useRef","useContext","MultipleTooltipContext","useAsideHeaderContext","useCallback","ASIDE_HEADER_COMPACT_WIDTH","COLLAPSE_ITEM_ID","jsxs","jsx","List","getSelectedItemIndex","getItemHeight","getItemsHeight","isMenuItem","Item","MultipleTooltip","getItemsMinHeight","getMoreButtonItem","getAutosizeListItems","MultipleTooltipProvider"],"mappings":"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"}
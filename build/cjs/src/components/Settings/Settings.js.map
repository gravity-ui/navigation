{"version":3,"file":"Settings.js","sources":["../../../../../../src/components/Settings/Settings.tsx"],"sourcesContent":["import React from 'react';\n\nimport {Flex, IconProps, Loader} from '@gravity-ui/uikit';\nimport identity from 'lodash/identity';\n\nimport {Title} from '../Title';\nimport {block} from '../utils/cn';\n\nimport {SettingsSelection} from './Selection';\nimport {\n    SettingsSelectionContextProvider,\n    useSettingsSelectionContext,\n    useSettingsSelectionProviderValue,\n} from './Selection/context';\nimport {isSectionSelected} from './Selection/utils';\nimport {SettingsMenu, SettingsMenuInstance} from './SettingsMenu/SettingsMenu';\nimport {SettingsMenuMobile} from './SettingsMenuMobile/SettingsMenuMobile';\nimport {SettingsSearch} from './SettingsSearch/SettingsSearch';\nimport type {\n    SettingsItem,\n    SettingsMenu as SettingsMenuType,\n    SettingsPageSection,\n} from './collect-settings';\nimport {getSettingsFromChildren} from './collect-settings';\nimport {escapeStringForRegExp} from './helpers';\nimport i18n from './i18n';\n\nimport './Settings.scss';\n\nconst b = block('settings');\n\nexport interface SettingsProps {\n    children: React.ReactNode;\n    title?: string;\n    filterPlaceholder?: string;\n    emptyPlaceholder?: string;\n    initialPage?: string;\n    initialSearch?: string;\n    selection?: SettingsSelection;\n    onPageChange?: (page: string | undefined) => void;\n    renderNotFound?: () => React.ReactNode;\n    renderLoading?: () => React.ReactNode;\n    loading?: boolean;\n    view?: 'normal' | 'mobile';\n    onClose?: () => void;\n    renderRightAdornment?: (item: SettingsItemProps) => React.ReactNode;\n    renderSectionRightAdornment?: (section: SettingsPageSection) => React.ReactNode;\n    showRightAdornmentOnHover?: boolean;\n}\n\nexport interface SettingsGroupProps {\n    id?: string;\n    groupTitle: string;\n    children: React.ReactNode;\n}\n\nexport interface SettingsPageProps {\n    id?: string;\n    title: string;\n    icon?: IconProps;\n    children: React.ReactNode;\n}\n\nexport interface SettingsSectionProps {\n    id?: string;\n    title: string;\n    header?: React.ReactNode;\n    children: React.ReactNode;\n    withBadge?: boolean;\n    showTitle?: boolean;\n    onlyChild?: boolean;\n}\n\nexport interface SettingsItemProps {\n    id?: string;\n    labelId?: string;\n    title: string;\n    highlightedTitle?: React.ReactNode | null;\n    renderTitleComponent?: (highlightedTitle: React.ReactNode | null) => React.ReactNode;\n    align?: 'top' | 'center';\n    children: React.ReactNode;\n    withBadge?: boolean;\n    mode?: 'row';\n    description?: React.ReactNode;\n}\n\nexport interface SettingsContextType\n    extends Pick<\n        SettingsProps,\n        'renderRightAdornment' | 'renderSectionRightAdornment' | 'showRightAdornmentOnHover'\n    > {}\n\nconst SettingsContext = React.createContext<SettingsContextType>({});\n\nexport const useSettingsContext = () => React.useContext(SettingsContext);\n\nexport function Settings({\n    loading,\n    renderLoading,\n    children,\n    view = 'normal',\n    renderRightAdornment,\n    renderSectionRightAdornment,\n    showRightAdornmentOnHover = true,\n    ...props\n}: SettingsProps) {\n    if (loading) {\n        return (\n            <div className={b({loading: true, view})}>\n                {typeof renderLoading === 'function' ? (\n                    renderLoading()\n                ) : (\n                    <Loader className={b('loader')} size=\"m\" />\n                )}\n            </div>\n        );\n    }\n\n    return (\n        <SettingsContext.Provider\n            value={{renderRightAdornment, renderSectionRightAdornment, showRightAdornmentOnHover}}\n        >\n            <SettingsContent view={view} {...props}>\n                {children}\n            </SettingsContent>\n        </SettingsContext.Provider>\n    );\n}\n\nconst getPageTitleById = (menu: SettingsMenuType, activePage: string) => {\n    for (const firstLevel of menu) {\n        if ('groupTitle' in firstLevel) {\n            for (const secondLevel of firstLevel.items)\n                if (secondLevel.id === activePage) return secondLevel.title;\n        } else if (firstLevel.id === activePage) return firstLevel.title;\n    }\n\n    return '';\n};\n\ntype SettingsContentProps = Omit<SettingsProps, 'loading' | 'renderLoading'>;\nfunction SettingsContent({\n    initialPage,\n    initialSearch,\n    selection,\n    children,\n    renderNotFound,\n    title = i18n('label_title'),\n    filterPlaceholder = i18n('label_filter-placeholder'),\n    emptyPlaceholder = i18n('label_empty-placeholder'),\n    view,\n    onPageChange,\n    onClose,\n}: SettingsContentProps) {\n    const {renderSectionRightAdornment, showRightAdornmentOnHover} = useSettingsContext();\n\n    const [search, setSearch] = React.useState(initialSearch ?? '');\n    const {menu, pages} = getSettingsFromChildren(children, search);\n\n    const selected = useSettingsSelectionProviderValue(pages, selection);\n\n    const pageKeys = Object.keys(pages);\n    const selectionInitialPage =\n        selected.page && pageKeys.includes(selected.page.id) ? selected.page.id : undefined;\n    const [selectedPage, setCurrentPage] = React.useState<string | undefined>(\n        selectionInitialPage ||\n            (initialPage && pageKeys.includes(initialPage) ? initialPage : undefined),\n    );\n    const searchInputRef = React.useRef<HTMLInputElement>(null);\n    const menuRef = React.useRef<SettingsMenuInstance>(null);\n    const isMobile = view === 'mobile';\n\n    React.useEffect(() => {\n        menuRef.current?.clearFocus();\n    }, [search]);\n\n    React.useEffect(() => {\n        const handler = () => {\n            menuRef.current?.clearFocus();\n        };\n        window.addEventListener('click', handler);\n        return () => {\n            window.removeEventListener('click', handler);\n        };\n    }, []);\n\n    let activePage = selectedPage;\n    if (!activePage || pages[activePage]?.hidden) {\n        activePage = Object.values(pages).find(({hidden}) => !hidden)?.id;\n    }\n\n    const handlePageChange = (newPage: string | undefined) => {\n        setCurrentPage((prevPage) => {\n            if (prevPage !== newPage) {\n                onPageChange?.(newPage);\n            }\n            return newPage;\n        });\n    };\n\n    React.useEffect(() => {\n        if (activePage !== selectedPage) {\n            handlePageChange(activePage);\n        }\n    });\n\n    React.useEffect(() => {\n        if (!selectionInitialPage) return;\n        setCurrentPage(selectionInitialPage);\n    }, [selectionInitialPage]);\n\n    React.useEffect(() => {\n        if (selected.selectedRef?.current) {\n            selected.selectedRef.current.scrollIntoView();\n        }\n    }, [selected.selectedRef]);\n\n    const renderSetting = ({title: settingTitle, element}: SettingsItem) => {\n        return (\n            <div key={settingTitle} className={b('section-item')}>\n                {React.cloneElement(element, {\n                    ...element.props,\n                    highlightedTitle:\n                        search && settingTitle ? prepareTitle(settingTitle, search) : settingTitle,\n                })}\n            </div>\n        );\n    };\n\n    const renderSection = (page: string, section: SettingsPageSection) => {\n        const isSelected = isSectionSelected(selected, page, section);\n\n        return (\n            <div\n                key={section.title}\n                className={b('section', {selected: isSelected, 'only-child': section.onlyChild})}\n                ref={isSelected ? selected.selectedRef : undefined}\n            >\n                {section.showTitle && (\n                    <h3 className={b('section-heading')}>\n                        {renderSectionRightAdornment ? (\n                            <Flex gap={2} alignItems={'center'}>\n                                {section.title}\n                                <div\n                                    className={b('section-right-adornment', {\n                                        hidden: showRightAdornmentOnHover,\n                                    })}\n                                >\n                                    {renderSectionRightAdornment(section)}\n                                </div>\n                            </Flex>\n                        ) : (\n                            section.title\n                        )}\n                    </h3>\n                )}\n\n                {section.header &&\n                    (isMobile ? (\n                        <div className={b('section-subheader')}>{section.header}</div>\n                    ) : (\n                        section.header\n                    ))}\n\n                {section.items.map((setting) => (setting.hidden ? null : renderSetting(setting)))}\n            </div>\n        );\n    };\n\n    const renderPageContent = (page: string | undefined) => {\n        if (!page) {\n            return typeof renderNotFound === 'function' ? (\n                renderNotFound()\n            ) : (\n                <div className={b('not-found')}>{emptyPlaceholder}</div>\n            );\n        }\n\n        const filteredSections = pages[page].sections.filter((section) => !section.hidden);\n\n        return (\n            <React.Fragment>\n                {!isMobile && (\n                    <Title hasSeparator onClose={onClose}>\n                        {getPageTitleById(menu, page)}\n                    </Title>\n                )}\n\n                <div className={b('content')}>\n                    {filteredSections.map((section) => renderSection(page, section))}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    return (\n        <SettingsSelectionContextProvider value={selected}>\n            <div className={b({view})}>\n                {isMobile ? (\n                    <React.Fragment>\n                        <SettingsSearch\n                            inputRef={searchInputRef}\n                            className={b('search')}\n                            initialValue={initialSearch}\n                            onChange={setSearch}\n                            autoFocus={false}\n                            inputSize={'xl'}\n                        />\n                        <SettingsMenuMobile\n                            items={menu}\n                            onChange={handlePageChange}\n                            activeItemId={activePage}\n                            className={b('tabs')}\n                        />\n                    </React.Fragment>\n                ) : (\n                    <div\n                        className={b('menu')}\n                        onClick={() => {\n                            if (searchInputRef.current) {\n                                searchInputRef.current.focus();\n                            }\n                        }}\n                        onKeyDown={(event) => {\n                            if (menuRef.current) {\n                                if (menuRef.current.handleKeyDown(event)) {\n                                    event.preventDefault();\n                                }\n                            }\n                        }}\n                    >\n                        <Title>{title}</Title>\n                        <SettingsSearch\n                            inputRef={searchInputRef}\n                            className={b('search')}\n                            initialValue={initialSearch}\n                            onChange={setSearch}\n                            placeholder={filterPlaceholder}\n                            autoFocus\n                        />\n                        <SettingsMenu\n                            ref={menuRef}\n                            items={menu}\n                            onChange={handlePageChange}\n                            activeItemId={activePage}\n                        />\n                    </div>\n                )}\n                <div className={b('page')}>{renderPageContent(activePage)}</div>\n            </div>\n        </SettingsSelectionContextProvider>\n    );\n}\n\nSettings.Group = function SettingsGroup({children}: SettingsGroupProps) {\n    return <React.Fragment>{children}</React.Fragment>;\n};\n\nSettings.Page = function SettingsPage({children}: SettingsPageProps) {\n    return <React.Fragment>{children}</React.Fragment>;\n};\n\nSettings.Section = function SettingsSection({children}: SettingsSectionProps) {\n    return <React.Fragment>{children}</React.Fragment>;\n};\n\nSettings.Item = function SettingsItem(setting: SettingsItemProps) {\n    const {\n        id,\n        labelId,\n        highlightedTitle,\n        children,\n        align = 'center',\n        withBadge,\n        renderTitleComponent = identity,\n        mode,\n        description,\n    } = setting;\n\n    const selected = useSettingsSelectionContext();\n    const isSettingSelected = selected.setting && selected.setting.id === id;\n\n    const {renderRightAdornment, showRightAdornmentOnHover} = useSettingsContext();\n    const titleNode = (\n        <span className={b('item-title', {badge: withBadge})}>\n            {renderTitleComponent(highlightedTitle)}\n        </span>\n    );\n    return (\n        <div\n            className={b('item', {align, mode, selected: isSettingSelected})}\n            ref={isSettingSelected ? selected.selectedRef : undefined}\n        >\n            <label className={b('item-heading')} id={labelId}>\n                {renderRightAdornment ? (\n                    <Flex className={b('item-title-wrapper')} gap={3}>\n                        {titleNode}\n                        <div\n                            className={b('item-right-adornment', {\n                                hidden: showRightAdornmentOnHover,\n                            })}\n                        >\n                            {renderRightAdornment(setting)}\n                        </div>\n                    </Flex>\n                ) : (\n                    titleNode\n                )}\n                {description ? <span className={b('item-description')}>{description}</span> : null}\n            </label>\n            <div className={b('item-content')}>{children}</div>\n        </div>\n    );\n};\n\nfunction prepareTitle(string: string, search: string) {\n    let temp = string.slice(0);\n    const title: React.ReactNode[] = [];\n    const parts = escapeStringForRegExp(search).split(' ').filter(Boolean);\n    let key = 0;\n    for (const part of parts) {\n        const regex = new RegExp(part, 'ig');\n        const match = regex.exec(temp);\n        if (match) {\n            const m = match[0];\n            const i = match.index;\n            if (i > 0) {\n                title.push(temp.slice(0, i));\n            }\n            title.push(\n                <strong key={key++} className={b('found')}>\n                    {m}\n                </strong>,\n            );\n            temp = temp.slice(i + m.length);\n        }\n    }\n    if (temp) {\n        title.push(temp);\n    }\n    return title;\n}\n"],"names":["block","React","__rest","Loader","i18n","getSettingsFromChildren","useSettingsSelectionProviderValue","isSectionSelected","Flex","Title","SettingsSelectionContextProvider","SettingsSearch","SettingsMenuMobile","SettingsMenu","identity","useSettingsSelectionContext","escapeStringForRegExp"],"mappings":"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"}
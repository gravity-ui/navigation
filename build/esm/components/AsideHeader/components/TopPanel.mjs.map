{"version":3,"file":"TopPanel.mjs","sources":["../../../../../src/components/AsideHeader/components/TopPanel.tsx"],"sourcesContent":["import React from 'react';\n\nimport {Alert} from '@gravity-ui/uikit';\n\nimport {AsideHeaderTopAlertProps} from '../../types';\nimport {useAsideHeaderTopPanel} from '../useAsideHeaderTopPanel';\nimport {b} from '../utils';\n\ntype Props = {\n    topAlert?: AsideHeaderTopAlertProps;\n};\n\nexport const TopPanel = ({topAlert}: Props) => {\n    const {topRef, updateTopSize} = useAsideHeaderTopPanel({topAlert});\n\n    const [opened, setOpened] = React.useState(true);\n\n    const handleClose = React.useCallback(() => {\n        setOpened(false);\n        topAlert?.onCloseTopAlert?.();\n    }, [topAlert]);\n\n    React.useEffect(() => {\n        if (!opened) {\n            updateTopSize();\n        }\n    }, [opened, updateTopSize]);\n\n    if (!topAlert || !topAlert.message) {\n        return null;\n    }\n\n    return (\n        <div ref={topRef} className={b('pane-top', {opened})}>\n            {opened && (\n                <React.Fragment>\n                    <Alert\n                        className={b('pane-top-alert', {\n                            centered: topAlert.centered,\n                            dense: topAlert.dense,\n                        })}\n                        corners=\"square\"\n                        layout=\"horizontal\"\n                        theme={topAlert.theme || 'warning'}\n                        view={topAlert.view}\n                        icon={topAlert.icon}\n                        title={topAlert.title}\n                        message={topAlert.message}\n                        actions={topAlert.actions}\n                        onClose={topAlert.closable ? handleClose : undefined}\n                    />\n                    <div className={b('pane-top-divider')}></div>\n                </React.Fragment>\n            )}\n        </div>\n    );\n};\n"],"names":["jsx","jsxs"],"mappings":";;;;;;AAYO,MAAM,QAAW,GAAA,CAAC,EAAC,QAAA,EAAqB,KAAA;AAC3C,EAAA,MAAM,EAAC,MAAQ,EAAA,aAAA,KAAiB,sBAAuB,CAAA,EAAC,UAAS,CAAA,CAAA;AAEjE,EAAA,MAAM,CAAC,MAAQ,EAAA,SAAS,CAAI,GAAA,KAAA,CAAM,SAAS,IAAI,CAAA,CAAA;AAE/C,EAAM,MAAA,WAAA,GAAc,KAAM,CAAA,WAAA,CAAY,MAAM;AACxC,IAAA,SAAA,CAAU,KAAK,CAAA,CAAA;AACf,IAAA,QAAA,EAAU,eAAkB,IAAA,CAAA;AAAA,GAChC,EAAG,CAAC,QAAQ,CAAC,CAAA,CAAA;AAEb,EAAA,KAAA,CAAM,UAAU,MAAM;AAClB,IAAA,IAAI,CAAC,MAAQ,EAAA;AACT,MAAc,aAAA,EAAA,CAAA;AAAA,KAClB;AAAA,GACD,EAAA,CAAC,MAAQ,EAAA,aAAa,CAAC,CAAA,CAAA;AAE1B,EAAA,IAAI,CAAC,QAAA,IAAY,CAAC,QAAA,CAAS,OAAS,EAAA;AAChC,IAAO,OAAA,IAAA,CAAA;AAAA,GACX;AAEA,EAAA,uBACKA,qBAAA,CAAA,KAAA,EAAA,EAAI,GAAK,EAAA,MAAA,EAAQ,WAAW,CAAE,CAAA,UAAA,EAAY,EAAC,MAAA,EAAO,CAC9C,EAAA,QAAA,EAAA,MAAA,oBACIC,sBAAA,CAAA,KAAA,CAAM,UAAN,EACG,QAAA,EAAA;AAAA,oBAAAD,qBAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACG,SAAA,EAAW,EAAE,gBAAkB,EAAA;AAAA,UAC3B,UAAU,QAAS,CAAA,QAAA;AAAA,UACnB,OAAO,QAAS,CAAA,KAAA;AAAA,SACnB,CAAA;AAAA,QACD,OAAQ,EAAA,QAAA;AAAA,QACR,MAAO,EAAA,YAAA;AAAA,QACP,KAAA,EAAO,SAAS,KAAS,IAAA,SAAA;AAAA,QACzB,MAAM,QAAS,CAAA,IAAA;AAAA,QACf,MAAM,QAAS,CAAA,IAAA;AAAA,QACf,OAAO,QAAS,CAAA,KAAA;AAAA,QAChB,SAAS,QAAS,CAAA,OAAA;AAAA,QAClB,SAAS,QAAS,CAAA,OAAA;AAAA,QAClB,OAAA,EAAS,QAAS,CAAA,QAAA,GAAW,WAAc,GAAA,KAAA,CAAA;AAAA,OAAA;AAAA,KAC/C;AAAA,oBACCA,qBAAA,CAAA,KAAA,EAAA,EAAI,SAAW,EAAA,CAAA,CAAE,kBAAkB,CAAG,EAAA,CAAA;AAAA,GAAA,EAC3C,CAER,EAAA,CAAA,CAAA;AAER;;;;"}
{"version":3,"file":"useAsideHeaderTopPanel.mjs","sources":["../../../../src/components/AsideHeader/useAsideHeaderTopPanel.tsx"],"sourcesContent":["import React from 'react';\n\nimport debounceFn from 'lodash.debounce';\n\nimport {AsideHeaderTopAlertProps} from '../types';\n\ntype AsideHeaderTopPanel = {\n    topRef: React.RefObject<HTMLDivElement>;\n    updateTopSize: () => void;\n};\n\nconst G_ROOT_CLASS_NAME = 'g-root';\n\nconst useRefHeight = (ref: React.RefObject<HTMLDivElement>) => {\n    const [topHeight, setTopHeight] = React.useState(0);\n    React.useEffect(() => {\n        if (ref.current) {\n            const {current} = ref;\n            setTopHeight(current.clientHeight);\n        }\n    }, [ref]);\n    return topHeight;\n};\n\nexport const useAsideHeaderTopPanel = ({\n    topAlert,\n}: {\n    topAlert?: AsideHeaderTopAlertProps;\n}): AsideHeaderTopPanel => {\n    const topRef = React.useRef<HTMLDivElement>(null);\n    const topHeight = useRefHeight(topRef);\n\n    const setAsideTopPanelHeight = React.useCallback((clientHeight: number) => {\n        const gRootElement = document\n            .getElementsByClassName(G_ROOT_CLASS_NAME)\n            .item(0) as HTMLElement | null;\n        gRootElement?.style.setProperty('--gn-aside-top-panel-height', clientHeight + 'px');\n    }, []);\n\n    const updateTopSize = React.useCallback(() => {\n        if (topRef.current) {\n            setAsideTopPanelHeight(topRef.current?.clientHeight || 0);\n        }\n    }, [topRef, setAsideTopPanelHeight]);\n\n    React.useLayoutEffect(() => {\n        const updateTopSizeDebounce = debounceFn(updateTopSize, 200, {leading: true});\n\n        if (topAlert) {\n            window.addEventListener('resize', updateTopSizeDebounce);\n            updateTopSizeDebounce();\n        }\n        return () => {\n            window.removeEventListener('resize', updateTopSizeDebounce);\n            setAsideTopPanelHeight(0);\n        };\n    }, [topAlert, topHeight, topRef, updateTopSize, setAsideTopPanelHeight]);\n\n    return {\n        topRef,\n        updateTopSize,\n    };\n};\n"],"names":["React"],"mappings":";;;AAWA,MAAM,iBAAoB,GAAA,QAAA,CAAA;AAE1B,MAAM,YAAA,GAAe,CAAC,GAAyC,KAAA;AAC3D,EAAA,MAAM,CAAC,SAAW,EAAA,YAAY,CAAI,GAAAA,cAAA,CAAM,SAAS,CAAC,CAAA,CAAA;AAClD,EAAAA,cAAA,CAAM,UAAU,MAAM;AAClB,IAAA,IAAI,IAAI,OAAS,EAAA;AACb,MAAM,MAAA,EAAC,SAAW,GAAA,GAAA,CAAA;AAClB,MAAA,YAAA,CAAa,QAAQ,YAAY,CAAA,CAAA;AAAA,KACrC;AAAA,GACJ,EAAG,CAAC,GAAG,CAAC,CAAA,CAAA;AACR,EAAO,OAAA,SAAA,CAAA;AACX,CAAA,CAAA;AAEO,MAAM,yBAAyB,CAAC;AAAA,EACnC,QAAA;AACJ,CAE2B,KAAA;AACvB,EAAM,MAAA,MAAA,GAASA,cAAM,CAAA,MAAA,CAAuB,IAAI,CAAA,CAAA;AAChD,EAAM,MAAA,SAAA,GAAY,aAAa,MAAM,CAAA,CAAA;AAErC,EAAA,MAAM,sBAAyB,GAAAA,cAAA,CAAM,WAAY,CAAA,CAAC,YAAyB,KAAA;AACvE,IAAA,MAAM,eAAe,QAChB,CAAA,sBAAA,CAAuB,iBAAiB,CAAA,CACxC,KAAK,CAAC,CAAA,CAAA;AACX,IAAA,YAAA,EAAc,KAAM,CAAA,WAAA,CAAY,6BAA+B,EAAA,YAAA,GAAe,IAAI,CAAA,CAAA;AAAA,GACtF,EAAG,EAAE,CAAA,CAAA;AAEL,EAAM,MAAA,aAAA,GAAgBA,cAAM,CAAA,WAAA,CAAY,MAAM;AAC1C,IAAA,IAAI,OAAO,OAAS,EAAA;AAChB,MAAuB,sBAAA,CAAA,MAAA,CAAO,OAAS,EAAA,YAAA,IAAgB,CAAC,CAAA,CAAA;AAAA,KAC5D;AAAA,GACD,EAAA,CAAC,MAAQ,EAAA,sBAAsB,CAAC,CAAA,CAAA;AAEnC,EAAAA,cAAA,CAAM,gBAAgB,MAAM;AACxB,IAAA,MAAM,wBAAwB,UAAW,CAAA,aAAA,EAAe,KAAK,EAAC,OAAA,EAAS,MAAK,CAAA,CAAA;AAE5E,IAAA,IAAI,QAAU,EAAA;AACV,MAAO,MAAA,CAAA,gBAAA,CAAiB,UAAU,qBAAqB,CAAA,CAAA;AACvD,MAAsB,qBAAA,EAAA,CAAA;AAAA,KAC1B;AACA,IAAA,OAAO,MAAM;AACT,MAAO,MAAA,CAAA,mBAAA,CAAoB,UAAU,qBAAqB,CAAA,CAAA;AAC1D,MAAA,sBAAA,CAAuB,CAAC,CAAA,CAAA;AAAA,KAC5B,CAAA;AAAA,KACD,CAAC,QAAA,EAAU,WAAW,MAAQ,EAAA,aAAA,EAAe,sBAAsB,CAAC,CAAA,CAAA;AAEvE,EAAO,OAAA;AAAA,IACH,MAAA;AAAA,IACA,aAAA;AAAA,GACJ,CAAA;AACJ;;;;"}
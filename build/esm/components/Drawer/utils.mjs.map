{"version":3,"file":"utils.mjs","sources":["../../../../src/components/Drawer/utils.ts"],"sourcesContent":["import * as React from 'react';\n\nexport const DRAWER_ITEM_MIN_RESIZE_WIDTH = 200;\nexport const DRAWER_ITEM_MAX_RESIZE_WIDTH = 800;\nexport const DRAWER_ITEM_INITIAL_RESIZE_WIDTH = 400;\n\nexport type DrawerDirection = 'right' | 'left';\nexport type OnResizeHandler = (width: number) => void;\n\nfunction getEventClientX(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n    return 'touches' in e ? e.touches[0]?.clientX ?? 0 : e.clientX;\n}\n\nexport interface UseResizeHandlersParams {\n    onStart: () => void;\n    onMove: (delta: number) => void;\n    onEnd: (delta: number) => void;\n}\n\nexport function useResizeHandlers({onStart, onMove, onEnd}: UseResizeHandlersParams) {\n    const initialXPosition = React.useRef(0);\n    const currentXPosition = React.useRef(0);\n\n    const handleMove = React.useCallback(\n        (e: MouseEvent | TouchEvent) => {\n            const currentX = getEventClientX(e);\n\n            if (currentXPosition.current === currentX) {\n                return;\n            }\n\n            currentXPosition.current = currentX;\n\n            const delta = initialXPosition.current - currentX;\n\n            onMove(delta);\n        },\n        [onMove],\n    );\n\n    const handleEnd = React.useCallback(\n        (e: MouseEvent | TouchEvent) => {\n            window.removeEventListener('mousemove', handleMove);\n            window.removeEventListener('touchmove', handleMove);\n\n            document.body.style.removeProperty('user-select');\n            document.body.style.removeProperty('-webkit-user-select');\n            document.body.style.removeProperty('cursor');\n\n            const currentX = getEventClientX(e);\n            const delta = initialXPosition.current - currentX;\n\n            onEnd(delta);\n        },\n        [handleMove, onEnd],\n    );\n\n    const handleStart = React.useCallback(\n        (e: React.MouseEvent | React.TouchEvent) => {\n            const currentX = getEventClientX(e);\n\n            initialXPosition.current = currentX;\n            currentXPosition.current = currentX;\n\n            window.addEventListener('mouseup', handleEnd, {once: true});\n            window.addEventListener('touchend', handleEnd, {once: true});\n            window.addEventListener('touchcancel', handleEnd, {once: true});\n\n            window.addEventListener('mousemove', handleMove);\n            window.addEventListener('touchmove', handleMove);\n\n            document.body.style.setProperty('user-select', 'none');\n            document.body.style.setProperty('-webkit-user-select', 'none');\n            document.body.style.setProperty('cursor', 'col-resize');\n\n            onStart();\n        },\n        [handleEnd, handleMove, onStart],\n    );\n\n    return {\n        onMouseDown: handleStart,\n        onTouchStart: handleStart,\n    };\n}\n\nexport interface UseResizableDrawerItemParams {\n    direction?: DrawerDirection;\n    width?: number;\n    minResizeWidth?: number;\n    maxResizeWidth?: number;\n    onResize?: OnResizeHandler;\n}\n\nexport function useResizableDrawerItem(params: UseResizableDrawerItemParams) {\n    const {\n        direction,\n        width,\n        minResizeWidth = DRAWER_ITEM_MIN_RESIZE_WIDTH,\n        maxResizeWidth = DRAWER_ITEM_MAX_RESIZE_WIDTH,\n        onResize,\n    } = params;\n\n    const [isResizing, setIsResizing] = React.useState(false);\n    const [resizeDelta, setResizeDelta] = React.useState(0);\n    const [internalWidth, setInternalWidth] = React.useState(\n        width ?? DRAWER_ITEM_INITIAL_RESIZE_WIDTH,\n    );\n\n    const getClampedWidth = React.useCallback(\n        (width: number) => Math.min(Math.max(width, minResizeWidth), maxResizeWidth),\n        [minResizeWidth, maxResizeWidth],\n    );\n\n    const getResizedWidth = React.useCallback(\n        (delta: number) => {\n            const signedDelta = direction === 'right' ? delta : -delta;\n            const newWidth = (width ?? internalWidth) + signedDelta;\n            return getClampedWidth(newWidth);\n        },\n        [width, internalWidth, direction, getClampedWidth],\n    );\n\n    const onStart = React.useCallback(() => {\n        setIsResizing(true);\n        setResizeDelta(0);\n    }, [setIsResizing, setResizeDelta]);\n\n    const onMove = React.useCallback((delta: number) => {\n        setResizeDelta(delta);\n    }, []);\n\n    const onEnd = React.useCallback(\n        (delta: number) => {\n            const newWidth = getResizedWidth(delta);\n            setIsResizing(false);\n            setInternalWidth(newWidth);\n            onResize?.(newWidth);\n        },\n        [setIsResizing, setInternalWidth, getResizedWidth, onResize],\n    );\n\n    const displayWidth = isResizing\n        ? getResizedWidth(resizeDelta)\n        : getClampedWidth(width ?? internalWidth);\n\n    const handlers = useResizeHandlers({onStart, onMove, onEnd});\n\n    return {resizedWidth: displayWidth, resizerHandlers: handlers};\n}\n"],"names":["width"],"mappings":"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"}
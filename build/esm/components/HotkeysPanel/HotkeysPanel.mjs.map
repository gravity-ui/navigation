{"version":3,"file":"HotkeysPanel.mjs","sources":["../../../../src/components/HotkeysPanel/HotkeysPanel.tsx"],"sourcesContent":["import React, {useCallback, useMemo, useState} from 'react';\nimport type {ReactNode} from 'react';\n\nimport {Hotkey, List, TextInput} from '@gravity-ui/uikit';\nimport type {ListProps} from '@gravity-ui/uikit';\n\nimport {Drawer, DrawerItem} from '../Drawer/Drawer';\nimport type {DrawerProps} from '../Drawer/Drawer';\nimport {block} from '../utils/cn';\n\nimport type {HotkeysGroup, HotkeysListItem} from './types';\nimport {filterHotkeys} from './utils/filterHotkeys';\nimport {flattenHotkeyGroups} from './utils/flattenHotkeyGroups';\n\nimport './HotkeysPanel.scss';\n\nconst b = block('hotkeys-panel');\n\nexport type HotkeysPanelProps<T> = {\n    hotkeys: HotkeysGroup<T>[];\n    title?: ReactNode;\n    filterPlaceholder?: string;\n    emptyState?: ReactNode;\n    visible: boolean;\n    onClose?: () => void;\n    className?: string;\n    leftOffset?: number | string;\n    topOffset?: number | string;\n    preventScrollBody?: DrawerProps['preventScrollBody'];\n} & Omit<ListProps<HotkeysListItem>, 'items' | 'emptyPlaceholder'>;\n\nexport function HotkeysPanel<T = {}>({\n    visible,\n    onClose,\n    leftOffset,\n    topOffset,\n    className,\n    preventScrollBody,\n    hotkeys,\n    itemClassName,\n    filterPlaceholder,\n    title,\n    emptyState,\n    ...listProps\n}: HotkeysPanelProps<T>) {\n    const [filter, setFilter] = useState('');\n\n    const hotkeysList = useMemo(() => {\n        const filteredHotkeys = filterHotkeys(hotkeys, filter);\n        return flattenHotkeyGroups(filteredHotkeys);\n    }, [hotkeys, filter]);\n\n    const renderItem = useCallback(\n        (item: HotkeysListItem) => (\n            <div className={b('item-content', {group: item.group})} key={item.title}>\n                {item.title}\n                {item.value && <Hotkey className={b('hotkey')} value={item.value} />}\n            </div>\n        ),\n        [],\n    );\n\n    const drawerItemContent = (\n        <React.Fragment>\n            <h2 className={b('title')}>{title}</h2>\n            <TextInput\n                value={filter}\n                onUpdate={setFilter}\n                placeholder={filterPlaceholder}\n                autoFocus\n                className={b('search')}\n                hasClear\n            />\n            <List<HotkeysListItem>\n                className={b('list')}\n                virtualized={false}\n                filterable={false}\n                items={hotkeysList}\n                renderItem={renderItem}\n                itemClassName={b('item', itemClassName)}\n                emptyPlaceholder={emptyState as string}\n                {...listProps}\n            />\n        </React.Fragment>\n    );\n\n    return (\n        <Drawer\n            className={b(null, className)}\n            onVeilClick={onClose}\n            onEscape={onClose}\n            preventScrollBody={preventScrollBody}\n            style={{\n                left: leftOffset,\n                top: topOffset,\n            }}\n        >\n            <DrawerItem\n                id=\"hotkeys\"\n                visible={visible}\n                className={b('drawer-item')}\n                content={drawerItemContent}\n            />\n        </Drawer>\n    );\n}\n"],"names":["React"],"mappings":"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"}